from selenium import webdriver
import pytest
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager

#
# @pytest.fixture()
# def setup():
#     # driver = webdriver.Chrome('/Users/carl/Desktop/Q.A/chromedriver')
#     driver = webdriver.Chrome(ChromeDriverManager().install())
#     return driver


@pytest.fixture()
def setup(browser):
    if browser == 'chrome':
        driver = webdriver.Chrome(ChromeDriverManager().install())
        print("Launching Chrome Browser")
    elif browser == "firefox":
        driver = webdriver.Firefox()
        print("Launching Firefox Browser")
    return driver


def pytest_addoption(parser):
    parser.addoption("--browser")


@pytest.fixture()
def browser(request):
    return request.config.getoption("--browser")


############# Pytest HTML report #########

# this is a hook which adds environment info to html report

def pytest_configure(config):
    config._metadata['Project name'] = 'nop commerce'
    config._metadata['Module name'] = 'Customers'
    config._metadata['Tester'] = 'arnold'


# this hook modifies environment info to html report ( removing details that are generated by default)

@pytest.mark.optionalhook
def pytest_metadata(metadata):
    metadata.pop("javaHome", None)
    metadata.pop("Plugins", None)

